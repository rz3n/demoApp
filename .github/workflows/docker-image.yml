name: Test and build

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r app/requirements.txt

      - name: Run app
        run: |
          uvicorn app.main:app --host 0.0.0.0 --port 8000&
          sleep 5
          [ "$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8000/healthcheck)" -eq 200 ] || { echo "Error: HTTP status code is not 200"; exit 1; }

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ env.GITHUB_REF_NAME }}

      - name: Build and push the Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: app/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v1
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true
